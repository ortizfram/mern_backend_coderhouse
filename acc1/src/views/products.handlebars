<h1>Productos</h1>
<p style="color: blue;">Holaaa! {{firstName}} Bienvenid@</p>
<p style="color: green;">admin: {{isAdmin}}</p>
<button onclick="logout()">logout</button>
<br />
<br />
<button><a href="/">Home</a></button>
{{#if isAdmin}}
  <button style="background:green;"><a href="#" style="color:white;" onclick="addNewProduct()">Create New
      Product</a></button>
{{/if}}

<!-- Display products -->
{{#if products.length}}
  <ul>
    {{#each products}}
      <li>

        {{!-- Admin Actions --}}
        {{#if ../isAdmin}}
          <button
            style="background-color:blue;"
            onclick="updateProduct('{{this._id}}')"
          >Update</button>
          <button
            style="background-color:red;"
            onclick="deleteProduct('{{this._id}}')"
          >Delete</button>
        {{/if}}

        {{!-- Content --}}
        <h2>Title: {{this.title}}</h2>
        <p>Description: {{this.description}}</p>
        <p>$ {{this.price}}</p>
        <p>Stock: {{this.stock}}</p>
        <p>Category: {{this.category}}</p>

        <!-- You can display other product details here -->
        <hr />
      </li>
    {{/each}}
  </ul>
{{else}}
  <p>No products available.</p>
{{/if}}

<script>
  function logout() { fetch("/api/sessions/logout", { method: "GET", headers: {
  "Content-Type": "application/json" }, }) .then((response) => { if
  (response.ok) { console.log("logged-out"); window.location.href =
  "/api/sessions/login"; } else { console.error("Error al salir de sesion"); }
  }) .catch((error) => console.error("Error:", error)); }
</script>
<script>
  //addProduct
    function addNewProduct() {
    const title = prompt("Enter product title:");
    const description = prompt("Enter product description:");
    const price = prompt("Enter product price:");
    const stock = prompt("Enter product stock:");
    const category = prompt("Enter product category:");
    const status = "active"; // Default status for a new product

    if (title && description && price && stock && category) {
      const newProduct = {
        title,
        description,
        price,
        stock,
        category,
        status,
      };

      fetch("/api/products", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(newProduct)
      })
      .then(response => {
        if (response.ok) {
          alert("Product added successfully!");
          location.reload(); // Reload the page after successful addition
        } else {
          return response.json().then(errorData => {
            throw new Error(errorData.error || 'Failed to add product');
          });
        }
      })
      .catch(error => {
        alert("Failed to add product: " + error.message);
      });
    }
  }

</script>
<script>
  function updateProduct(productId) {
  // Fetch the current product details from the server
  fetch(`/api/products/${productId}`)
    .then(response => {
      if (!response.ok) {
        throw new Error("Failed to fetch product details");
      }
      return response.json();
    })
    .then(product => {
      // Prompt dialogs with pre-filled current values if available
      const newTitle = prompt(`${product._id} Enter new title:`, product.title);
      const newDescription = prompt("Enter new description:", product.description);
      const newPrice = prompt("Enter new price:", product.price);
      const newStock = prompt("Enter stock for product:", product.stock);
      const newCategory = prompt("Enter category for product:", product.category);
      const newStatus = prompt("Enter status 'active':", product.status);

      // Perform update only if all fields are provided
      if (newTitle !== null && newDescription !== null && newPrice !== null &&
          newStock !== null && newCategory !== null && newStatus !== null) {
        const updatedProduct = {
          title: newTitle,
          description: newDescription,
          price: parseFloat(newPrice),
          stock: parseInt(newStock, 10),
          category: newCategory,
          status: newStatus
        };

        // Send the updated data to the server
        fetch(`/api/products/${productId}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(updatedProduct)
        })
          .then(response => {
            if (response.ok) {
              alert("Product updated successfully!");
              location.reload(); // Reload the page after successful update
            } else {
              return response.json().then(errorData => {
                throw new Error(errorData.error || 'Failed to update product');
              });
            }
          })
          .catch(error => {
            alert("Failed to update product: " + error.message);
          });
      }
    })
    .catch(error => {
      alert("Failed to fetch product details: " + error.message);
    });
}

</script>

<script>
    function deleteProduct(productId) {
      if (confirm("Are you sure you want to delete this product?")) {
        fetch(`/api/products/${productId}`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
        })
        .then(response => {
          if (response.ok) {
            location.reload();
          } else {
            alert("Failed to delete product.");
          }
        })
        .catch(error => console.error("Error:", error));
      }
    }
</script>